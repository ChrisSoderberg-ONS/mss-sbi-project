Traceback (most recent call last):
  File "c:\ONSApps\My_Miniconda3\envs\mss-env\Lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\ONSApps\My_Miniconda3\envs\mss-env\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "c:\ONSApps\My_Miniconda3\envs\mss-env\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\ONSApps\My_Miniconda3\envs\mss-env\Lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\ONSApps\My_Miniconda3\envs\mss-env\Lib\asyncio\base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "c:\ONSApps\My_Miniconda3\envs\mss-env\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "c:\ONSApps\My_Miniconda3\envs\mss-env\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "c:\ONSApps\My_Miniconda3\envs\mss-env\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#Merge the dataframe with the locationa and risk scores

risk_locations = pd.merge(sbi, Dev_1km, on="SiteRef")

def my_cmap(x):
    colour_dict = {
        4 : '#ff0000',
        3 : '#ffac00',
        2 : '#fff500',
        1 : '#0bff00',
        0 : '#00e6ff'
    }
    return color_dict[x]


print(my_cmap(4))

risk_locations['color'] = risk_locations['Risk Scale'].map(color_dict)

risk_locations.explore("Risk Scale", cmap = "YlOrRd", tiles="CartoDB positron")
------------------


[31m---------------------------------------------------------------------------[39m
[31mNameError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 16[39m
[32m      6[39m     colour_dict = {
[32m      7[39m         [32m4[39m : [33m'[39m[33m#ff0000[39m[33m'[39m,
[32m      8[39m         [32m3[39m : [33m'[39m[33m#ffac00[39m[33m'[39m,
[32m   (...)[39m[32m     11[39m         [32m0[39m : [33m'[39m[33m#00e6ff[39m[33m'[39m
[32m     12[39m     }
[32m     13[39m     [38;5;28;01mreturn[39;00m color_dict[x]
[32m---> [39m[32m16[39m [38;5;28mprint[39m([43mmy_cmap[49m[43m([49m[32;43m4[39;49m[43m)[49m)
[32m     18[39m risk_locations[[33m'[39m[33mcolor[39m[33m'[39m] = risk_locations[[33m'[39m[33mRisk Scale[39m[33m'[39m].map(color_dict)
[32m     20[39m risk_locations.explore([33m"[39m[33mRisk Scale[39m[33m"[39m, cmap = [33m"[39m[33mYlOrRd[39m[33m"[39m, tiles=[33m"[39m[33mCartoDB positron[39m[33m"[39m)

[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 13[39m, in [36mmy_cmap[39m[34m(x)[39m
[32m      5[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mmy_cmap[39m(x):
[32m      6[39m     colour_dict = {
[32m      7[39m         [32m4[39m : [33m'[39m[33m#ff0000[39m[33m'[39m,
[32m      8[39m         [32m3[39m : [33m'[39m[33m#ffac00[39m[33m'[39m,
[32m   (...)[39m[32m     11[39m         [32m0[39m : [33m'[39m[33m#00e6ff[39m[33m'[39m
[32m     12[39m     }
[32m---> [39m[32m13[39m     [38;5;28;01mreturn[39;00m [43mcolor_dict[49m[x]

[31mNameError[39m: name 'color_dict' is not defined

